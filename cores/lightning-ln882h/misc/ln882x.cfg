# Main file for ln882x series Cortex-M3 parts
#
# !!!!!!
#

set CHIPNAME ln882h
set CHIPSERIES ln882x

transport select swd

# Adapt based on what transport is active.
source [find target/swj-dp.tcl]

if { [info exists CHIPNAME] } {
	set _CHIPNAME $CHIPNAME
} else {
	error "CHIPNAME not set. Please do not include ln882x.cfg directly."
}

if { [info exists CHIPSERIES] } {
	# Validate chip series is supported
	if { $CHIPSERIES != "ln882x" } {
		error "Unsupported chip series specified."
	}
	set _CHIPSERIES $CHIPSERIES
} else {
	error "CHIPSERIES not set. Please do not include ln882x.cfg directly."
}

if { [info exists CPUTAPID] } {
	# Allow user override
	set _CPUTAPID $CPUTAPID
} else {
	# ln882x use a Cortex M4 core.
	if { $_CHIPSERIES == "ln882x" } {
		set _CPUTAPID 0x2ba01477
	}
}

swj_newdap $_CHIPNAME cpu -irlen 4 -expected-id $_CPUTAPID

set _TARGETNAME $_CHIPNAME.cpu
dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu

set _ENDIAN little

target create $_TARGETNAME cortex_m -endian $_ENDIAN -dap $_CHIPNAME.dap

adapter speed 1000
adapter srst delay 200

# ln882x (Cortex M4 core) support SYSRESETREQ
if {![using_hla]} {
    # if srst is not fitted use SYSRESETREQ to
    # perform a soft reset
    cortex_m reset_config sysresetreq
}

#$_TARGETNAME configure -event reset-init {ln882x_init}
